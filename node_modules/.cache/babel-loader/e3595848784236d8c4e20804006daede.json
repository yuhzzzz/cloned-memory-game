{"ast":null,"code":"(() => {\n  \"use strict\";\n\n  var t = {\n      831: (t, e) => {\n        Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n        class s extends Error {\n          constructor(t, e, s, i, n) {\n            super(t + \":\" + s + \":\" + i + \": \" + e), this.reason = e, this.filename = t, this.line = s, this.column = i, this.source = n;\n          }\n        }\n        e.default = s;\n      },\n      711: (t, e) => {\n        Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        }), e.default = class {\n          constructor(t, e, s) {\n            this.start = t, this.end = e, this.source = s;\n          }\n        };\n      },\n      607: function (t, e, s) {\n        var i = this && this.__createBinding || (Object.create ? function (t, e, s, i) {\n            void 0 === i && (i = s);\n            var n = Object.getOwnPropertyDescriptor(e, s);\n            n && !(\"get\" in n ? !e.__esModule : n.writable || n.configurable) || (n = {\n              enumerable: !0,\n              get: function () {\n                return e[s];\n              }\n            }), Object.defineProperty(t, i, n);\n          } : function (t, e, s, i) {\n            void 0 === i && (i = s), t[i] = e[s];\n          }),\n          n = this && this.__exportStar || function (t, e) {\n            for (var s in t) \"default\" === s || Object.prototype.hasOwnProperty.call(e, s) || i(e, t, s);\n          };\n        Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        }), e.stringify = e.parse = void 0;\n        var r = s(654);\n        Object.defineProperty(e, \"parse\", {\n          enumerable: !0,\n          get: function () {\n            return r.default;\n          }\n        });\n        var o = s(373);\n        Object.defineProperty(e, \"stringify\", {\n          enumerable: !0,\n          get: function () {\n            return o.default;\n          }\n        }), n(s(371), e), n(s(831), e), n(s(711), e);\n      },\n      654: (t, e, s) => {\n        Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        }), e.parse = void 0;\n        const i = s(831),\n          n = s(711),\n          r = s(371),\n          o = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n        function c(t) {\n          return t ? t.trim() : \"\";\n        }\n        function u(t, e) {\n          const s = t && \"string\" == typeof t.type,\n            i = s ? t : e;\n          for (const e in t) {\n            const s = t[e];\n            Array.isArray(s) ? s.forEach(t => {\n              u(t, i);\n            }) : s && \"object\" == typeof s && u(s, i);\n          }\n          return s && Object.defineProperty(t, \"parent\", {\n            configurable: !0,\n            writable: !0,\n            enumerable: !1,\n            value: e || null\n          }), t;\n        }\n        e.parse = (t, e) => {\n          e = e || {};\n          let s = 1,\n            a = 1;\n          function m() {\n            const t = {\n              line: s,\n              column: a\n            };\n            return function (i) {\n              return i.position = new n.default(t, {\n                line: s,\n                column: a\n              }, (null == e ? void 0 : e.source) || \"\"), g(), i;\n            };\n          }\n          const p = [];\n          function h(n) {\n            const r = new i.default((null == e ? void 0 : e.source) || \"\", n, s, a, t);\n            if (!(null == e ? void 0 : e.silent)) throw r;\n            p.push(r);\n          }\n          function l() {\n            return y(/^{\\s*/);\n          }\n          function f() {\n            return y(/^}/);\n          }\n          function d() {\n            let e;\n            const s = [];\n            for (g(), v(s); t.length && \"}\" !== t.charAt(0) && (e = M() || P());) e && (s.push(e), v(s));\n            return s;\n          }\n          function y(e) {\n            const i = e.exec(t);\n            if (!i) return;\n            const n = i[0];\n            return function (t) {\n              const e = t.match(/\\n/g);\n              e && (s += e.length);\n              const i = t.lastIndexOf(\"\\n\");\n              a = ~i ? t.length - i : a + t.length;\n            }(n), t = t.slice(n.length), i;\n          }\n          function g() {\n            y(/^\\s*/);\n          }\n          function v(t) {\n            let e;\n            for (t = t || []; e = C();) e && t.push(e);\n            return t;\n          }\n          function C() {\n            const e = m();\n            if (\"/\" !== t.charAt(0) || \"*\" !== t.charAt(1)) return;\n            const s = y(/^\\/\\*[^]*?\\*\\//);\n            return s ? e({\n              type: r.CssTypes.comment,\n              comment: s[0].slice(2, -2)\n            }) : h(\"End of comment missing\");\n          }\n          function T() {\n            const t = y(/^([^{]+)/);\n            if (!t) return;\n            const e = c(t[0]).replace(/\\/\\*[^]*?\\*\\//gm, \"\");\n            return -1 === e.indexOf(\",\") ? [e] : e.replace(/(\"|')(?:\\\\\\1|.)*?,(?:\\\\\\1|.)*?\\1|\\(.*?,.*?\\)/g, t => t.replace(/,/g, \"â€Œ\")).split(\",\").map(t => c(t.replace(/\\u200C/g, \",\")));\n          }\n          function b() {\n            const t = m(),\n              e = y(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n            if (!e) return;\n            const s = c(e[0]);\n            if (!y(/^:\\s*/)) return h(\"property missing ':'\");\n            const i = y(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/),\n              n = t({\n                type: r.CssTypes.declaration,\n                property: s.replace(o, \"\"),\n                value: i ? c(i[0]).replace(o, \"\") : \"\"\n              });\n            return y(/^[;\\s]*/), n;\n          }\n          function j() {\n            const t = [];\n            if (!l()) return h(\"missing '{'\");\n            let e;\n            for (v(t); e = b();) e && (t.push(e), v(t));\n            return f() ? t : h(\"missing '}'\");\n          }\n          function k() {\n            let t;\n            const e = [],\n              s = m();\n            for (; t = y(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/);) e.push(t[1]), y(/^,\\s*/);\n            if (e.length) return s({\n              type: r.CssTypes.keyframe,\n              values: e,\n              declarations: j() || []\n            });\n          }\n          const _ = w(\"import\"),\n            V = w(\"charset\"),\n            O = w(\"namespace\");\n          function w(t) {\n            const e = new RegExp(\"^@\" + t + \"\\\\s*([^;]+);\");\n            return function () {\n              const s = m(),\n                i = y(e);\n              if (!i) return;\n              const n = {\n                type: t\n              };\n              return n[t] = i[1].trim(), s(n);\n            };\n          }\n          function M() {\n            if (\"@\" === t[0]) return function () {\n              const t = m(),\n                e = y(/^@([-\\w]+)?keyframes\\s*/);\n              if (!e) return;\n              const s = e[1],\n                i = y(/^([-\\w]+)\\s*/);\n              if (!i) return h(\"@keyframes missing name\");\n              const n = i[1];\n              if (!l()) return h(\"@keyframes missing '{'\");\n              let o,\n                c = v();\n              for (; o = k();) c.push(o), c = c.concat(v());\n              return f() ? t({\n                type: r.CssTypes.keyframes,\n                name: n,\n                vendor: s,\n                keyframes: c\n              }) : h(\"@keyframes missing '}'\");\n            }() || function () {\n              const t = m(),\n                e = y(/^@media *([^{]+)/);\n              if (!e) return;\n              const s = c(e[1]);\n              if (!l()) return h(\"@media missing '{'\");\n              const i = v().concat(d());\n              return f() ? t({\n                type: r.CssTypes.media,\n                media: s,\n                rules: i\n              }) : h(\"@media missing '}'\");\n            }() || function () {\n              const t = m(),\n                e = y(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n              if (e) return t({\n                type: r.CssTypes.customMedia,\n                name: c(e[1]),\n                media: c(e[2])\n              });\n            }() || function () {\n              const t = m(),\n                e = y(/^@supports *([^{]+)/);\n              if (!e) return;\n              const s = c(e[1]);\n              if (!l()) return h(\"@supports missing '{'\");\n              const i = v().concat(d());\n              return f() ? t({\n                type: r.CssTypes.supports,\n                supports: s,\n                rules: i\n              }) : h(\"@supports missing '}'\");\n            }() || _() || V() || O() || function () {\n              const t = m(),\n                e = y(/^@([-\\w]+)?document *([^{]+)/);\n              if (!e) return;\n              const s = c(e[1]),\n                i = c(e[2]);\n              if (!l()) return h(\"@document missing '{'\");\n              const n = v().concat(d());\n              return f() ? t({\n                type: r.CssTypes.document,\n                document: i,\n                vendor: s,\n                rules: n\n              }) : h(\"@document missing '}'\");\n            }() || function () {\n              const t = m();\n              if (!y(/^@page */)) return;\n              const e = T() || [];\n              if (!l()) return h(\"@page missing '{'\");\n              let s,\n                i = v();\n              for (; s = b();) i.push(s), i = i.concat(v());\n              return f() ? t({\n                type: r.CssTypes.page,\n                selectors: e,\n                declarations: i\n              }) : h(\"@page missing '}'\");\n            }() || function () {\n              const t = m();\n              if (!y(/^@host\\s*/)) return;\n              if (!l()) return h(\"@host missing '{'\");\n              const e = v().concat(d());\n              return f() ? t({\n                type: r.CssTypes.host,\n                rules: e\n              }) : h(\"@host missing '}'\");\n            }() || function () {\n              const t = m();\n              if (!y(/^@font-face\\s*/)) return;\n              if (!l()) return h(\"@font-face missing '{'\");\n              let e,\n                s = v();\n              for (; e = b();) s.push(e), s = s.concat(v());\n              return f() ? t({\n                type: r.CssTypes.fontFace,\n                declarations: s\n              }) : h(\"@font-face missing '}'\");\n            }();\n          }\n          function P() {\n            const t = m(),\n              e = T();\n            return e ? (v(), t({\n              type: r.CssTypes.rule,\n              selectors: e,\n              declarations: j() || []\n            })) : h(\"selector missing\");\n          }\n          return u(function () {\n            const t = d();\n            return {\n              type: r.CssTypes.stylesheet,\n              stylesheet: {\n                source: null == e ? void 0 : e.source,\n                rules: t,\n                parsingErrors: p\n              }\n            };\n          }());\n        }, e.default = e.parse;\n      },\n      854: (t, e, s) => {\n        Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n        const i = s(371);\n        e.default = class {\n          constructor(t) {\n            this.level = 0, this.indentation = \"  \", this.compress = !1, \"string\" == typeof (null == t ? void 0 : t.indent) && (this.indentation = null == t ? void 0 : t.indent), (null == t ? void 0 : t.compress) && (this.compress = !0);\n          }\n          emit(t, e) {\n            return t;\n          }\n          indent(t) {\n            return this.level = this.level || 1, t ? (this.level += t, \"\") : Array(this.level).join(this.indentation);\n          }\n          visit(t) {\n            switch (t.type) {\n              case i.CssTypes.stylesheet:\n                return this.stylesheet(t);\n              case i.CssTypes.rule:\n                return this.rule(t);\n              case i.CssTypes.declaration:\n                return this.declaration(t);\n              case i.CssTypes.comment:\n                return this.comment(t);\n              case i.CssTypes.charset:\n                return this.charset(t);\n              case i.CssTypes.document:\n                return this.document(t);\n              case i.CssTypes.customMedia:\n                return this.customMedia(t);\n              case i.CssTypes.fontFace:\n                return this.fontFace(t);\n              case i.CssTypes.host:\n                return this.host(t);\n              case i.CssTypes.import:\n                return this.import(t);\n              case i.CssTypes.keyframes:\n                return this.keyframes(t);\n              case i.CssTypes.keyframe:\n                return this.keyframe(t);\n              case i.CssTypes.media:\n                return this.media(t);\n              case i.CssTypes.namespace:\n                return this.namespace(t);\n              case i.CssTypes.page:\n                return this.page(t);\n              case i.CssTypes.supports:\n                return this.supports(t);\n            }\n          }\n          mapVisit(t, e) {\n            let s = \"\";\n            e = e || \"\";\n            for (let i = 0, n = t.length; i < n; i++) s += this.visit(t[i]), e && i < n - 1 && (s += this.emit(e));\n            return s;\n          }\n          compile(t) {\n            return this.compress ? t.stylesheet.rules.map(this.visit, this).join(\"\") : this.stylesheet(t);\n          }\n          stylesheet(t) {\n            return this.mapVisit(t.stylesheet.rules, \"\\n\\n\");\n          }\n          comment(t) {\n            return this.compress ? this.emit(\"\", t.position) : this.emit(this.indent() + \"/*\" + t.comment + \"*/\", t.position);\n          }\n          import(t) {\n            return this.emit(\"@import \" + t.import + \";\", t.position);\n          }\n          media(t) {\n            return this.compress ? this.emit(\"@media \" + t.media, t.position) + this.emit(\"{\") + this.mapVisit(t.rules) + this.emit(\"}\") : this.emit(\"@media \" + t.media, t.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(t.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n          }\n          document(t) {\n            const e = \"@\" + (t.vendor || \"\") + \"document \" + t.document;\n            return this.compress ? this.emit(e, t.position) + this.emit(\"{\") + this.mapVisit(t.rules) + this.emit(\"}\") : this.emit(e, t.position) + this.emit(\"  {\\n\" + this.indent(1)) + this.mapVisit(t.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n          }\n          charset(t) {\n            return this.emit(\"@charset \" + t.charset + \";\", t.position);\n          }\n          namespace(t) {\n            return this.emit(\"@namespace \" + t.namespace + \";\", t.position);\n          }\n          supports(t) {\n            return this.compress ? this.emit(\"@supports \" + t.supports, t.position) + this.emit(\"{\") + this.mapVisit(t.rules) + this.emit(\"}\") : this.emit(\"@supports \" + t.supports, t.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(t.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n          }\n          keyframes(t) {\n            return this.compress ? this.emit(\"@\" + (t.vendor || \"\") + \"keyframes \" + t.name, t.position) + this.emit(\"{\") + this.mapVisit(t.keyframes) + this.emit(\"}\") : this.emit(\"@\" + (t.vendor || \"\") + \"keyframes \" + t.name, t.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(t.keyframes, \"\\n\") + this.emit(this.indent(-1) + \"}\");\n          }\n          keyframe(t) {\n            const e = t.declarations;\n            return this.compress ? this.emit(t.values.join(\",\"), t.position) + this.emit(\"{\") + this.mapVisit(e) + this.emit(\"}\") : this.emit(this.indent()) + this.emit(t.values.join(\", \"), t.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(e, \"\\n\") + this.emit(this.indent(-1) + \"\\n\" + this.indent() + \"}\\n\");\n          }\n          page(t) {\n            if (this.compress) {\n              const e = t.selectors.length ? t.selectors.join(\", \") : \"\";\n              return this.emit(\"@page \" + e, t.position) + this.emit(\"{\") + this.mapVisit(t.declarations) + this.emit(\"}\");\n            }\n            const e = t.selectors.length ? t.selectors.join(\", \") + \" \" : \"\";\n            return this.emit(\"@page \" + e, t.position) + this.emit(\"{\\n\") + this.emit(this.indent(1)) + this.mapVisit(t.declarations, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n}\");\n          }\n          fontFace(t) {\n            return this.compress ? this.emit(\"@font-face\", t.position) + this.emit(\"{\") + this.mapVisit(t.declarations) + this.emit(\"}\") : this.emit(\"@font-face \", t.position) + this.emit(\"{\\n\") + this.emit(this.indent(1)) + this.mapVisit(t.declarations, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n}\");\n          }\n          host(t) {\n            return this.compress ? this.emit(\"@host\", t.position) + this.emit(\"{\") + this.mapVisit(t.rules) + this.emit(\"}\") : this.emit(\"@host\", t.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(t.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n          }\n          customMedia(t) {\n            return this.emit(\"@custom-media \" + t.name + \" \" + t.media + \";\", t.position);\n          }\n          rule(t) {\n            const e = t.declarations;\n            if (!e.length) return \"\";\n            if (this.compress) return this.emit(t.selectors.join(\",\"), t.position) + this.emit(\"{\") + this.mapVisit(e) + this.emit(\"}\");\n            const s = this.indent();\n            return this.emit(t.selectors.map(t => s + t).join(\",\\n\"), t.position) + this.emit(\" {\\n\") + this.emit(this.indent(1)) + this.mapVisit(e, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n\" + this.indent() + \"}\");\n          }\n          declaration(t) {\n            return this.compress ? this.emit(t.property + \":\" + t.value, t.position) + this.emit(\";\") : this.emit(this.indent()) + this.emit(t.property + \": \" + t.value, t.position) + this.emit(\";\");\n          }\n        };\n      },\n      373: (t, e, s) => {\n        Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n        const i = s(854);\n        e.default = (t, e) => new i.default(e || {}).compile(t);\n      },\n      371: (t, e) => {\n        var s;\n        Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        }), e.CssTypes = void 0, (s = e.CssTypes || (e.CssTypes = {})).stylesheet = \"stylesheet\", s.rule = \"rule\", s.declaration = \"declaration\", s.comment = \"comment\", s.charset = \"charset\", s.document = \"document\", s.customMedia = \"custom-media\", s.fontFace = \"font-face\", s.host = \"host\", s.import = \"import\", s.keyframes = \"keyframes\", s.keyframe = \"keyframe\", s.media = \"media\", s.namespace = \"namespace\", s.page = \"page\", s.supports = \"supports\";\n      }\n    },\n    e = {},\n    s = function s(i) {\n      var n = e[i];\n      if (void 0 !== n) return n.exports;\n      var r = e[i] = {\n        exports: {}\n      };\n      return t[i].call(r.exports, r, r.exports, s), r.exports;\n    }(607);\n  module.exports = s;\n})();","map":{"version":3,"sources":["webpack://@adobe/css-tools/src/CssParseError.ts","webpack://@adobe/css-tools/src/CssPosition.ts","webpack://@adobe/css-tools/src/index.ts","webpack://@adobe/css-tools/src/parse/index.ts","webpack://@adobe/css-tools/src/stringify/compiler.ts","webpack://@adobe/css-tools/src/stringify/index.ts","webpack://@adobe/css-tools/src/type.ts","webpack://@adobe/css-tools/webpack/bootstrap","webpack://@adobe/css-tools/webpack/startup"],"names":["CssParseError","Error","constructor","filename","msg","lineno","column","css","super","this","reason","line","source","start","end","commentre","options","str","lines","match","length","i","lastIndexOf","position","node","whitespace","errorsList","error","err","silent","push","rulesList","rules","type","stylesheet","parsingErrors","open","close","comments","charAt","atrule","rule","re","m","exec","updatePosition","slice","c","comment","pos","selector","res","trim","replace","indexOf","split","map","s","declaration","propMatch","propValue","val","ret","property","value","declarations","decls","decl","keyframe","vals","values","m1","vendor","m2","name","frame","frames","concat","keyframes","supports","style","host","media","customMedia","sel","page","selectors","doc","document","fontFace","atimport","_compileAtrule","atcharset","atnamespace","RegExp","atkeyframes","atmedia","atcustommedia","atsupports","atdocument","atpage","athost","atfontface","addParent","obj","parent","isNode","childParent","k","Array","isArray","forEach","v","Object","defineProperty","configurable","writable","enumerable","indent","indentation","compress","emit","_position","level","join","visit","charset","import","namespace","mapVisit","nodes","delim","buf","compile","CssTypes","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","__webpack_exports__"],"mappings":"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","sourcesContent":["export default class CssParseError extends Error {\n  readonly reason: string;\n  readonly filename?: string;\n  readonly line: number;\n  readonly column: number;\n  readonly source: string;\n\n  constructor(\n    filename: string,\n    msg: string,\n    lineno: number,\n    column: number,\n    css: string\n  ) {\n    super(filename + ':' + lineno + ':' + column + ': ' + msg);\n    this.reason = msg;\n    this.filename = filename;\n    this.line = lineno;\n    this.column = column;\n    this.source = css;\n  }\n}\n","/**\n * Store position information for a node\n */\nexport default class Position {\n  start: {line: number; column: number};\n  end: {line: number; column: number};\n  source?: string;\n\n  constructor(\n    start: {line: number; column: number},\n    end: {line: number; column: number},\n    source: string\n  ) {\n    this.start = start;\n    this.end = end;\n    this.source = source;\n  }\n}\n","export {default as parse} from './parse';\nexport {default as stringify} from './stringify';\nexport * from './type';\nexport * from './CssParseError';\nexport * from './CssPosition';\n","import CssParseError from '../CssParseError';\nimport Position from '../CssPosition';\nimport {\n  CssAtRuleAST,\n  CssCharsetAST,\n  CssCommentAST,\n  CssCommonPositionAST,\n  CssCustomMediaAST,\n  CssDeclarationAST,\n  CssDocumentAST,\n  CssFontFaceAST,\n  CssHostAST,\n  CssImportAST,\n  CssKeyframeAST,\n  CssKeyframesAST,\n  CssMediaAST,\n  CssNamespaceAST,\n  CssPageAST,\n  CssRuleAST,\n  CssStylesheetAST,\n  CssSupportsAST,\n  CssTypes,\n} from '../type';\n\n// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nexport const parse = (\n  css: string,\n  options?: {source?: string; silent?: boolean}\n): CssStylesheetAST => {\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  let lineno = 1;\n  let column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n  function updatePosition(str: string) {\n    const lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    const i = str.lastIndexOf('\\n');\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   */\n  function position() {\n    const start = {line: lineno, column: column};\n    return function <T1 extends CssCommonPositionAST>(\n      node: Omit<T1, 'position'>\n    ): T1 {\n      (node as T1).position = new Position(\n        start,\n        {line: lineno, column: column},\n        options?.source || ''\n      );\n      whitespace();\n      return node as T1;\n    };\n  }\n\n  /**\n   * Error `msg`.\n   */\n  const errorsList: Array<CssParseError> = [];\n\n  function error(msg: string) {\n    const err = new CssParseError(\n      options?.source || '',\n      msg,\n      lineno,\n      column,\n      css\n    );\n\n    if (options?.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n  function stylesheet(): CssStylesheetAST {\n    const rulesList = rules();\n\n    const result: CssStylesheetAST = {\n      type: CssTypes.stylesheet,\n      stylesheet: {\n        source: options?.source,\n        rules: rulesList,\n        parsingErrors: errorsList,\n      },\n    };\n\n    return result;\n  }\n\n  /**\n   * Opening brace.\n   */\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n  function rules() {\n    let node: CssRuleAST | CssAtRuleAST | void;\n    const rules: Array<CssRuleAST | CssAtRuleAST> = [];\n    whitespace();\n    comments(rules);\n    while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\n      if (node) {\n        rules.push(node);\n        comments(rules);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n  function match(re: RegExp) {\n    const m = re.exec(css);\n    if (!m) {\n      return;\n    }\n    const str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n  function comments<T1 extends CssCommonPositionAST>(\n    rules?: Array<T1 | CssCommentAST>\n  ) {\n    let c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n  function comment(): CssCommentAST | void {\n    const pos = position();\n    if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\n      return;\n    }\n\n    const m = match(/^\\/\\*[^]*?\\*\\//);\n    if (!m) {\n      return error('End of comment missing');\n    }\n\n    return pos<CssCommentAST>({\n      type: CssTypes.comment,\n      comment: m[0].slice(2, -2),\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n  function selector() {\n    const m = match(/^([^{]+)/);\n    if (!m) {\n      return;\n    }\n\n    // remove comment in selector; [^] is equivalent to [.\\n\\r]\n    const res = trim(m[0]).replace(/\\/\\*[^]*?\\*\\//gm, '');\n\n    // Optimisation: If there is no ',' no need to split or post-process (this is less costly)\n    if (res.indexOf(',') === -1) {\n      return [res];\n    }\n\n    return (\n      res\n        /**\n         * replace ',' by \\u200C for data selector (div[data-lang=\"fr,de,us\"])\n         * replace ',' by \\u200C for nthChild and other selector (div:nth-child(2,3,4))\n         *\n         * Examples:\n         * div[data-lang=\"fr,\\\"de,us\"]\n         * div[data-lang='fr,\\'de,us']\n         * div:matches(.toto, .titi:matches(.toto, .titi))\n         *\n         * Regex logic:\n         *  (\"|')(?:\\\\\\1|.)*?,(?:\\\\\\1|.)*?\\1 => Handle the \" and '\n         *  \\(.*?,.*?\\)  => Handle the ()\n         *\n         * Optimization 0:\n         * No greedy capture (see docs about the difference between .* and .*?)\n         *\n         * Optimization 1:\n         *  \\(.*?,.*?\\) instead of \\(.*?\\) to limit the number of replace (don't need to replace if , is not in the string)\n         *\n         * Optimization 2:\n         * (\"|')(?:\\\\\\1|.)*?,(?:\\\\\\1|.)*?\\1 this use reference to capture group, it work faster.\n         */\n        .replace(/(\"|')(?:\\\\\\1|.)*?,(?:\\\\\\1|.)*?\\1|\\(.*?,.*?\\)/g, m =>\n          m.replace(/,/g, '\\u200C')\n        )\n        // Split the selector by ','\n        .split(',')\n        // Replace back \\u200C by ','\n        .map(s => {\n          return trim(s.replace(/\\u200C/g, ','));\n        })\n    );\n  }\n\n  /**\n   * Parse declaration.\n   */\n  function declaration(): CssDeclarationAST | void {\n    const pos = position();\n\n    // prop\n    const propMatch = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!propMatch) {\n      return;\n    }\n    const propValue = trim(propMatch[0]);\n\n    // :\n    if (!match(/^:\\s*/)) {\n      return error(\"property missing ':'\");\n    }\n\n    // val\n    const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/);\n\n    const ret = pos<CssDeclarationAST>({\n      type: CssTypes.declaration,\n      property: propValue.replace(commentre, ''),\n      value: val ? trim(val[0]).replace(commentre, '') : '',\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n  function declarations() {\n    const decls: Array<CssDeclarationAST | CssCommentAST> = [];\n\n    if (!open()) {\n      return error(\"missing '{'\");\n    }\n    comments(decls);\n\n    // declarations\n    let decl;\n    while ((decl = declaration())) {\n      if (decl) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    if (!close()) {\n      return error(\"missing '}'\");\n    }\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n  function keyframe() {\n    let m;\n    const vals = [];\n    const pos = position();\n\n    while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) {\n      return;\n    }\n\n    return pos<CssKeyframeAST>({\n      type: CssTypes.keyframe,\n      values: vals,\n      declarations: declarations() || [],\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n  function atkeyframes(): CssKeyframesAST | void {\n    const pos = position();\n    const m1 = match(/^@([-\\w]+)?keyframes\\s*/);\n\n    if (!m1) {\n      return;\n    }\n    const vendor = m1[1];\n\n    // identifier\n    const m2 = match(/^([-\\w]+)\\s*/);\n    if (!m2) {\n      return error('@keyframes missing name');\n    }\n    const name = m2[1];\n\n    if (!open()) {\n      return error(\"@keyframes missing '{'\");\n    }\n\n    let frame;\n    let frames: Array<CssKeyframeAST | CssCommentAST> = comments();\n    while ((frame = keyframe())) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n\n    if (!close()) {\n      return error(\"@keyframes missing '}'\");\n    }\n\n    return pos<CssKeyframesAST>({\n      type: CssTypes.keyframes,\n      name: name,\n      vendor: vendor,\n      keyframes: frames,\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n  function atsupports(): CssSupportsAST | void {\n    const pos = position();\n    const m = match(/^@supports *([^{]+)/);\n\n    if (!m) {\n      return;\n    }\n    const supports = trim(m[1]);\n\n    if (!open()) {\n      return error(\"@supports missing '{'\");\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@supports missing '}'\");\n    }\n\n    return pos<CssSupportsAST>({\n      type: CssTypes.supports,\n      supports: supports,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse host.\n   */\n  function athost() {\n    const pos = position();\n    const m = match(/^@host\\s*/);\n\n    if (!m) {\n      return;\n    }\n\n    if (!open()) {\n      return error(\"@host missing '{'\");\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@host missing '}'\");\n    }\n\n    return pos<CssHostAST>({\n      type: CssTypes.host,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n  function atmedia(): CssMediaAST | void {\n    const pos = position();\n    const m = match(/^@media *([^{]+)/);\n\n    if (!m) {\n      return;\n    }\n    const media = trim(m[1]);\n\n    if (!open()) {\n      return error(\"@media missing '{'\");\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@media missing '}'\");\n    }\n\n    return pos<CssMediaAST>({\n      type: CssTypes.media,\n      media: media,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse custom-media.\n   */\n  function atcustommedia(): CssCustomMediaAST | void {\n    const pos = position();\n    const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) {\n      return;\n    }\n\n    return pos<CssCustomMediaAST>({\n      type: CssTypes.customMedia,\n      name: trim(m[1]),\n      media: trim(m[2]),\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n  function atpage(): CssPageAST | void {\n    const pos = position();\n    const m = match(/^@page */);\n    if (!m) {\n      return;\n    }\n\n    const sel = selector() || [];\n\n    if (!open()) {\n      return error(\"@page missing '{'\");\n    }\n    let decls = comments<CssDeclarationAST>();\n\n    // declarations\n    let decl;\n    while ((decl = declaration())) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) {\n      return error(\"@page missing '}'\");\n    }\n\n    return pos<CssPageAST>({\n      type: CssTypes.page,\n      selectors: sel,\n      declarations: decls,\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n  function atdocument(): CssDocumentAST | void {\n    const pos = position();\n    const m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) {\n      return;\n    }\n\n    const vendor = trim(m[1]);\n    const doc = trim(m[2]);\n\n    if (!open()) {\n      return error(\"@document missing '{'\");\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@document missing '}'\");\n    }\n\n    return pos<CssDocumentAST>({\n      type: CssTypes.document,\n      document: doc,\n      vendor: vendor,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse font-face.\n   */\n  function atfontface(): CssFontFaceAST | void {\n    const pos = position();\n    const m = match(/^@font-face\\s*/);\n    if (!m) {\n      return;\n    }\n\n    if (!open()) {\n      return error(\"@font-face missing '{'\");\n    }\n    let decls = comments<CssDeclarationAST>();\n\n    // declarations\n    let decl;\n    while ((decl = declaration())) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) {\n      return error(\"@font-face missing '}'\");\n    }\n\n    return pos<CssFontFaceAST>({\n      type: CssTypes.fontFace,\n      declarations: decls,\n    });\n  }\n\n  /**\n   * Parse import\n   */\n  const atimport = _compileAtrule<CssImportAST>('import');\n\n  /**\n   * Parse charset\n   */\n  const atcharset = _compileAtrule<CssCharsetAST>('charset');\n\n  /**\n   * Parse namespace\n   */\n  const atnamespace = _compileAtrule<CssNamespaceAST>('namespace');\n\n  /**\n   * Parse non-block at-rules\n   */\n  function _compileAtrule<T1 extends CssCommonPositionAST>(\n    name: string\n  ): () => T1 | void {\n    const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\n    return function (): T1 | void {\n      const pos = position();\n      const m = match(re);\n      if (!m) {\n        return;\n      }\n      const ret: Record<string, string> = {type: name};\n      ret[name] = m[1].trim();\n      return pos<T1>(ret as unknown as T1) as T1;\n    };\n  }\n\n  /**\n   * Parse at rule.\n   */\n  function atrule(): CssAtRuleAST | void {\n    if (css[0] !== '@') {\n      return;\n    }\n\n    return (\n      atkeyframes() ||\n      atmedia() ||\n      atcustommedia() ||\n      atsupports() ||\n      atimport() ||\n      atcharset() ||\n      atnamespace() ||\n      atdocument() ||\n      atpage() ||\n      athost() ||\n      atfontface()\n    );\n  }\n\n  /**\n   * Parse rule.\n   */\n  function rule() {\n    const pos = position();\n    const sel = selector();\n\n    if (!sel) {\n      return error('selector missing');\n    }\n    comments();\n\n    return pos<CssRuleAST>({\n      type: CssTypes.rule,\n      selectors: sel,\n      declarations: declarations() || [],\n    });\n  }\n\n  return addParent(stylesheet());\n};\n\n/**\n * Trim `str`.\n */\nfunction trim(str: string) {\n  return str ? str.trim() : '';\n}\n\n/**\n * Adds non-enumerable parent node reference to each node.\n */\nfunction addParent<T1 extends {type?: string}>(obj: T1, parent?: unknown): T1 {\n  const isNode = obj && typeof obj.type === 'string';\n  const childParent = isNode ? obj : parent;\n\n  for (const k in obj) {\n    const value = obj[k];\n    if (Array.isArray(value)) {\n      value.forEach(v => {\n        addParent(v, childParent);\n      });\n    } else if (value && typeof value === 'object') {\n      addParent(value, childParent);\n    }\n  }\n\n  if (isNode) {\n    Object.defineProperty(obj, 'parent', {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null,\n    });\n  }\n\n  return obj;\n}\n\nexport default parse;\n","import {\n  CssAllNodesAST,\n  CssCharsetAST,\n  CssCommentAST,\n  CssCommonPositionAST,\n  CssCustomMediaAST,\n  CssDeclarationAST,\n  CssDocumentAST,\n  CssFontFaceAST,\n  CssHostAST,\n  CssImportAST,\n  CssKeyframeAST,\n  CssKeyframesAST,\n  CssMediaAST,\n  CssNamespaceAST,\n  CssPageAST,\n  CssRuleAST,\n  CssStylesheetAST,\n  CssSupportsAST,\n  CssTypes,\n} from '../type';\n\nclass Compiler {\n  level = 0;\n  indentation = '  ';\n  compress = false;\n\n  constructor(options?: {indent?: string; compress?: boolean}) {\n    if (typeof options?.indent === 'string') {\n      this.indentation = options?.indent;\n    }\n    if (options?.compress) {\n      this.compress = true;\n    }\n  }\n\n  // We disable no-unused-vars for _position. We keep position for potential reintroduction of source-map\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  emit(str: string, _position?: CssCommonPositionAST['position']) {\n    return str;\n  }\n\n  /**\n   * Increase, decrease or return current indentation.\n   */\n  indent(level?: number) {\n    this.level = this.level || 1;\n\n    if (level) {\n      this.level += level;\n      return '';\n    }\n\n    return Array(this.level).join(this.indentation);\n  }\n\n  visit(node: CssAllNodesAST): string {\n    switch (node.type) {\n      case CssTypes.stylesheet:\n        return this.stylesheet(node);\n      case CssTypes.rule:\n        return this.rule(node);\n      case CssTypes.declaration:\n        return this.declaration(node);\n      case CssTypes.comment:\n        return this.comment(node);\n      case CssTypes.charset:\n        return this.charset(node);\n      case CssTypes.document:\n        return this.document(node);\n      case CssTypes.customMedia:\n        return this.customMedia(node);\n      case CssTypes.fontFace:\n        return this.fontFace(node);\n      case CssTypes.host:\n        return this.host(node);\n      case CssTypes.import:\n        return this.import(node);\n      case CssTypes.keyframes:\n        return this.keyframes(node);\n      case CssTypes.keyframe:\n        return this.keyframe(node);\n      case CssTypes.media:\n        return this.media(node);\n      case CssTypes.namespace:\n        return this.namespace(node);\n      case CssTypes.page:\n        return this.page(node);\n      case CssTypes.supports:\n        return this.supports(node);\n    }\n  }\n\n  mapVisit(nodes: Array<CssAllNodesAST>, delim?: string) {\n    let buf = '';\n    delim = delim || '';\n\n    for (let i = 0, length = nodes.length; i < length; i++) {\n      buf += this.visit(nodes[i]);\n      if (delim && i < length - 1) {\n        buf += this.emit(delim);\n      }\n    }\n\n    return buf;\n  }\n\n  compile(node: CssStylesheetAST) {\n    if (this.compress) {\n      return node.stylesheet.rules.map(this.visit, this).join('');\n    }\n\n    return this.stylesheet(node);\n  }\n\n  /**\n   * Visit stylesheet node.\n   */\n  stylesheet(node: CssStylesheetAST) {\n    return this.mapVisit(node.stylesheet.rules, '\\n\\n');\n  }\n\n  /**\n   * Visit comment node.\n   */\n  comment(node: CssCommentAST) {\n    if (this.compress) {\n      return this.emit('', node.position);\n    }\n    return this.emit(this.indent() + '/*' + node.comment + '*/', node.position);\n  }\n\n  /**\n   * Visit import node.\n   */\n  import(node: CssImportAST) {\n    return this.emit('@import ' + node.import + ';', node.position);\n  }\n\n  /**\n   * Visit media node.\n   */\n  media(node: CssMediaAST) {\n    if (this.compress) {\n      return (\n        this.emit('@media ' + node.media, node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit('@media ' + node.media, node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit(this.indent(-1) + '\\n}')\n    );\n  }\n\n  /**\n   * Visit document node.\n   */\n  document(node: CssDocumentAST) {\n    const doc = '@' + (node.vendor || '') + 'document ' + node.document;\n    if (this.compress) {\n      return (\n        this.emit(doc, node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit(doc, node.position) +\n      this.emit(' ' + ' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit(this.indent(-1) + '\\n}')\n    );\n  }\n\n  /**\n   * Visit charset node.\n   */\n  charset(node: CssCharsetAST) {\n    return this.emit('@charset ' + node.charset + ';', node.position);\n  }\n\n  /**\n   * Visit namespace node.\n   */\n  namespace(node: CssNamespaceAST) {\n    return this.emit('@namespace ' + node.namespace + ';', node.position);\n  }\n\n  /**\n   * Visit supports node.\n   */\n  supports(node: CssSupportsAST) {\n    if (this.compress) {\n      return (\n        this.emit('@supports ' + node.supports, node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit('@supports ' + node.supports, node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit(this.indent(-1) + '\\n}')\n    );\n  }\n\n  /**\n   * Visit keyframes node.\n   */\n  keyframes(node: CssKeyframesAST) {\n    if (this.compress) {\n      return (\n        this.emit(\n          '@' + (node.vendor || '') + 'keyframes ' + node.name,\n          node.position\n        ) +\n        this.emit('{') +\n        this.mapVisit(node.keyframes) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit(\n        '@' + (node.vendor || '') + 'keyframes ' + node.name,\n        node.position\n      ) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.keyframes, '\\n') +\n      this.emit(this.indent(-1) + '}')\n    );\n  }\n\n  /**\n   * Visit keyframe node.\n   */\n  keyframe(node: CssKeyframeAST) {\n    const decls = node.declarations;\n    if (this.compress) {\n      return (\n        this.emit(node.values.join(','), node.position) +\n        this.emit('{') +\n        this.mapVisit(decls) +\n        this.emit('}')\n      );\n    }\n\n    return (\n      this.emit(this.indent()) +\n      this.emit(node.values.join(', '), node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(decls, '\\n') +\n      this.emit(this.indent(-1) + '\\n' + this.indent() + '}\\n')\n    );\n  }\n\n  /**\n   * Visit page node.\n   */\n  page(node: CssPageAST) {\n    if (this.compress) {\n      const sel = node.selectors.length ? node.selectors.join(', ') : '';\n\n      return (\n        this.emit('@page ' + sel, node.position) +\n        this.emit('{') +\n        this.mapVisit(node.declarations) +\n        this.emit('}')\n      );\n    }\n    const sel = node.selectors.length ? node.selectors.join(', ') + ' ' : '';\n\n    return (\n      this.emit('@page ' + sel, node.position) +\n      this.emit('{\\n') +\n      this.emit(this.indent(1)) +\n      this.mapVisit(node.declarations, '\\n') +\n      this.emit(this.indent(-1)) +\n      this.emit('\\n}')\n    );\n  }\n\n  /**\n   * Visit font-face node.\n   */\n  fontFace(node: CssFontFaceAST) {\n    if (this.compress) {\n      return (\n        this.emit('@font-face', node.position) +\n        this.emit('{') +\n        this.mapVisit(node.declarations) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit('@font-face ', node.position) +\n      this.emit('{\\n') +\n      this.emit(this.indent(1)) +\n      this.mapVisit(node.declarations, '\\n') +\n      this.emit(this.indent(-1)) +\n      this.emit('\\n}')\n    );\n  }\n\n  /**\n   * Visit host node.\n   */\n  host(node: CssHostAST) {\n    if (this.compress) {\n      return (\n        this.emit('@host', node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit('@host', node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit(this.indent(-1) + '\\n}')\n    );\n  }\n\n  /**\n   * Visit custom-media node.\n   */\n  customMedia(node: CssCustomMediaAST) {\n    return this.emit(\n      '@custom-media ' + node.name + ' ' + node.media + ';',\n      node.position\n    );\n  }\n\n  /**\n   * Visit rule node.\n   */\n  rule(node: CssRuleAST) {\n    const decls = node.declarations;\n    if (!decls.length) {\n      return '';\n    }\n\n    if (this.compress) {\n      return (\n        this.emit(node.selectors.join(','), node.position) +\n        this.emit('{') +\n        this.mapVisit(decls) +\n        this.emit('}')\n      );\n    }\n    const indent = this.indent();\n\n    return (\n      this.emit(\n        node.selectors\n          .map(s => {\n            return indent + s;\n          })\n          .join(',\\n'),\n        node.position\n      ) +\n      this.emit(' {\\n') +\n      this.emit(this.indent(1)) +\n      this.mapVisit(decls, '\\n') +\n      this.emit(this.indent(-1)) +\n      this.emit('\\n' + this.indent() + '}')\n    );\n  }\n\n  /**\n   * Visit declaration node.\n   */\n  declaration(node: CssDeclarationAST) {\n    if (this.compress) {\n      return (\n        this.emit(node.property + ':' + node.value, node.position) +\n        this.emit(';')\n      );\n    }\n    return (\n      this.emit(this.indent()) +\n      this.emit(node.property + ': ' + node.value, node.position) +\n      this.emit(';')\n    );\n  }\n}\n\nexport default Compiler;\n","import {CssStylesheetAST} from '../type';\nimport Compiler from './compiler';\n\nexport default (\n  node: CssStylesheetAST,\n  options?: ConstructorParameters<typeof Compiler>[0]\n) => {\n  const compiler = new Compiler(options || {});\n  return compiler.compile(node);\n};\n","import CssParseError from './CssParseError';\nimport Position from './CssPosition';\n\nexport enum CssTypes {\n  stylesheet = 'stylesheet',\n  rule = 'rule',\n  declaration = 'declaration',\n  comment = 'comment',\n  charset = 'charset',\n  document = 'document',\n  customMedia = 'custom-media',\n  fontFace = 'font-face',\n  host = 'host',\n  import = 'import',\n  keyframes = 'keyframes',\n  keyframe = 'keyframe',\n  media = 'media',\n  namespace = 'namespace',\n  page = 'page',\n  supports = 'supports',\n}\n\nexport type CssCommonAST = {\n  type: CssTypes;\n};\n\nexport type CssCommonPositionAST = CssCommonAST & {\n  position?: Position;\n  parent?: unknown;\n};\n\nexport type CssStylesheetAST = CssCommonAST & {\n  type: CssTypes.stylesheet;\n  stylesheet: {\n    source?: string;\n    rules: Array<CssAtRuleAST>;\n    parsingErrors?: Array<CssParseError>;\n  };\n};\n\nexport type CssRuleAST = CssCommonPositionAST & {\n  type: CssTypes.rule;\n  selectors: Array<string>;\n  declarations: Array<CssDeclarationAST | CssCommentAST>;\n};\n\nexport type CssDeclarationAST = CssCommonPositionAST & {\n  type: CssTypes.declaration;\n  property: string;\n  value: string;\n};\n\nexport type CssCommentAST = CssCommonPositionAST & {\n  type: CssTypes.comment;\n  comment: string;\n};\n\nexport type CssCharsetAST = CssCommonPositionAST & {\n  type: CssTypes.charset;\n  charset: string;\n};\nexport type CssCustomMediaAST = CssCommonPositionAST & {\n  type: CssTypes.customMedia;\n  name: string;\n  media: string;\n};\nexport type CssDocumentAST = CssCommonPositionAST & {\n  type: CssTypes.document;\n  document: string;\n  vendor?: string;\n  rules: Array<CssAtRuleAST>;\n};\nexport type CssFontFaceAST = CssCommonPositionAST & {\n  type: CssTypes.fontFace;\n  declarations: Array<CssDeclarationAST | CssCommentAST>;\n};\nexport type CssHostAST = CssCommonPositionAST & {\n  type: CssTypes.host;\n  rules: Array<CssAtRuleAST>;\n};\nexport type CssImportAST = CssCommonPositionAST & {\n  type: CssTypes.import;\n  import: string;\n};\nexport type CssKeyframesAST = CssCommonPositionAST & {\n  type: CssTypes.keyframes;\n  name: string;\n  vendor?: string;\n  keyframes: Array<CssKeyframeAST | CssCommentAST>;\n};\nexport type CssKeyframeAST = CssCommonPositionAST & {\n  type: CssTypes.keyframe;\n  values: Array<string>;\n  declarations: Array<CssDeclarationAST | CssCommentAST>;\n};\nexport type CssMediaAST = CssCommonPositionAST & {\n  type: CssTypes.media;\n  media: string;\n  rules: Array<CssAtRuleAST>;\n};\nexport type CssNamespaceAST = CssCommonPositionAST & {\n  type: CssTypes.namespace;\n  namespace: string;\n};\nexport type CssPageAST = CssCommonPositionAST & {\n  type: CssTypes.page;\n  selectors: Array<string>;\n  declarations: Array<CssDeclarationAST | CssCommentAST>;\n};\nexport type CssSupportsAST = CssCommonPositionAST & {\n  type: CssTypes.supports;\n  supports: string;\n  rules: Array<CssAtRuleAST>;\n};\n\nexport type CssAtRuleAST =\n  | CssRuleAST\n  | CssCommentAST\n  | CssCharsetAST\n  | CssCustomMediaAST\n  | CssDocumentAST\n  | CssFontFaceAST\n  | CssHostAST\n  | CssImportAST\n  | CssKeyframesAST\n  | CssMediaAST\n  | CssNamespaceAST\n  | CssPageAST\n  | CssSupportsAST;\n\nexport type CssAllNodesAST =\n  | CssAtRuleAST\n  | CssStylesheetAST\n  | CssDeclarationAST\n  | CssKeyframeAST;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}